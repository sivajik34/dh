# ============================================================================
# DRONE CI CONFIGURATION (.drone.yml)
# ============================================================================

kind: pipeline
type: kubernetes
name: chatbot-build

steps:
  - name: test
    image: python:3.11
    commands:
      - pip install -r requirements.txt
      - pip install pytest pytest-cov
      - pytest tests/ --cov=. --cov-report=xml
  
  - name: lint
    image: python:3.11
    commands:
      - pip install flake8 black mypy
      - flake8 . --max-line-length=120
      - black --check .
      - mypy . --ignore-missing-imports
  
  - name: security-scan
    image: aquasec/trivy
    commands:
      - trivy fs --severity HIGH,CRITICAL .
  
  - name: build-gateway
    image: plugins/docker
    settings:
      repo: your-registry/chatbot-gateway
      tags:
        - ${DRONE_COMMIT_SHA}
        - latest
      dockerfile: gateway/Dockerfile
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
  
  - name: build-nlu
    image: plugins/docker
    settings:
      repo: your-registry/chatbot-nlu
      tags:
        - ${DRONE_COMMIT_SHA}
        - latest
      dockerfile: nlu/Dockerfile
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
  
  - name: build-orchestrator
    image: plugins/docker
    settings:
      repo: your-registry/chatbot-orchestrator
      tags:
        - ${DRONE_COMMIT_SHA}
        - latest
      dockerfile: orchestrator/Dockerfile
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
  
  - name: notify
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: devops
      template: >
        {{#success build.status}}
          ✅ Build {{build.number}} succeeded!
        {{else}}
          ❌ Build {{build.number}} failed!
        {{/success}}
    when:
      status:
        - success
        - failure

trigger:
  branch:
    - main
    - develop
  event:
    - push
    - pull_request